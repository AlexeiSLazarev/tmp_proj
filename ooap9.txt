abstract class PowerSet<T> extends HashTable<T> {

  // Конструктор
  // постусловие: создано пустое множество с указанным максимальным размером
  public PowerSet<T> PowerSet(int maxSize);

  // Команды

  // постусловие: добавлен новый элемент в множество
  // предусловие: элемент отсутствует в множестве
  public void add(T value);

  // постусловие: элемент удалён из множества, если он присутствовал
  public void remove(T value);

  // постусловие: все элементы удалены из множества
  public void clear();

  // Запросы

  // постусловие: возвращает true, если элемент присутствует в множестве
  public boolean contains(T value);

  // постусловие: возвращает количество элементов в множестве
  public int size();

  // постусловие: возвращает максимальное количество элементов в множестве
  public int capacity();

  // Дополнительные запросы для множеств

  // постусловие: возвращает множество, являющееся объединением двух множеств
  public PowerSet<T> union(PowerSet<T> otherSet);

  // постусловие: возвращает множество, являющееся пересечением двух множеств
  public PowerSet<T> intersection(PowerSet<T> otherSet);

  // постусловие: возвращает множество, являющееся разностью текущего и другого множества
  public PowerSet<T> difference(PowerSet<T> otherSet);

  // постусловие: возвращает true, если текущее множество является подмножеством другого
  public boolean is_subset(PowerSet<T> otherSet);

  // Запросы статусов
  public int get_add_status();     // успешно; множество переполнено; элемент уже существует
  public int get_remove_status();  // успешно; элемент не найден
  public int get_contains_status();// успешно; элемент не найден
}
